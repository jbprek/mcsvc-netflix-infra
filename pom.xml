<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.foo.mcsvc.infra</groupId>
    <artifactId>mcsvc-netflix-infra</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <name>mcsvc-netflix-infra</name>
    <packaging>pom</packaging>
    <description>Boot Netflix Infrastructure microservices</description>

    <modules>
        <module>mcsvc-infra-eureka-service</module>
        <module>mcsvc-infra-config-service</module>
        <module>mcsvc-infra-admin-service</module>
    </modules>

    <properties>
        <maven.compiler.release>11</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
        <jib.version>1.6.1</jib.version>
        <spring-boot-admin.version>2.1.5</spring-boot-admin.version>
        <docker.base.image>gcr.io/distroless/java:11</docker.base.image>
<!--        <docker.base.image>docker://adoptopenjdk:11-hotspot-bionic</docker.base.image>-->
        <docker.target.tag>0.2-11</docker.target.tag>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.version}</version>
                <configuration>
                    <from>
                        <image>${docker.base.image}</image>
                    </from>
                    <to>
                        <image>jbprek/${project.artifactId}</image>
                        <tags>
                            <tag>${docker.target.tag}</tag>
                            <tag>latest</tag>
                        </tags>
                    </to>
                    <container>
                        <useCurrentTimestamp>true</useCurrentTimestamp>
                        <jvmFlags>
                            <jvmFlag>-Xmx128m</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
